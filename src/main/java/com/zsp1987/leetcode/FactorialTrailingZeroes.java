package com.zsp1987.leetcode;

/*
 Given an integer n, return the number of trailing zeroes in n!.

 Note: Your solution should be in logarithmic time complexity.

 Credits:
 Special thanks to @ts for adding this problem and creating all test cases.
 */
public class FactorialTrailingZeroes {
	public int trailingZeroes(int n) {
		int count5 = 0;
		int a = n;
		while (a > 0) {
			a = a / 5;
			count5 += a;
		}
		return count5;

	}
}

// å› ä¸º0æ˜¯å› ä¸º5 * 2 æž„æˆ? 2åœ¨N!é‡Œç»?å¯¹å¤Ÿç”¨, æ‰€ä»¥å?ªè¦?è®¡ç®— 5çš„æ•°é‡?
// è€Œ n / 5 å°±ç­‰äºŽå½“å‰? nå‡ºçŽ°å°?äºŽ5çš„æœ€é«˜é˜¶ä¹˜çš„æ•°é‡? æ¯”å¦‚(226 ä¸­æœ‰ä¸€ä¸ª225(5^3))
// æ‰€ä»¥æ­¤æ–¹æ³•èƒ½ç»Ÿè®¡å‡ºæ‰€æœ‰åŸºæ•°5çš„å‡ºçŽ°æ¬¡æ•°