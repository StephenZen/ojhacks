package com.zsp1987.leetcode;

/*
 Count the number of prime numbers less than a non-negative number, n.
 */

public class CountPrimes {
	public int countPrimes(int n) {
		boolean[] isPrime = new boolean[n];
		for (int i = 2; i < n; i++) {
			isPrime[i] = true;
		}
		for (int i = 2; i * i < n; i++) {
			if (!isPrime[i])
				continue;
			for (int j = i * i; j < n; j += i) {
				isPrime[j] = false;
			}
		}
		int count = 0;
		for (int i = 2; i < n; i++) {
			if (isPrime[i])
				count++;
		}
		return count;
	}
}

// Sieve of Eratosthenes
// ä»Ž2åˆ°æ ¹å?·nçš„æ•°(å› ä¸º n=p*q, where p<q, æ‰€ä»¥æœ€å¤§çš„å› å­?åº”è¯¥æ˜¯æ ¹å?·n), æ¯?æ¬¡é€’åŠ è¯¥æ•°ç›´åˆ°n, å°†è¦†ç›–åˆ°çš„æ•°æ ‡è®°
// æœ€ç»ˆæ²¡æœ‰è¢«è¦†ç›–çš„æ•°å°±æ˜¯è´¨æ•°