package com.zsp1987.leetcode.uncategory;

import com.zsp1987.leetcode.datatype.TreeNode;

public class BinaryTreeMaximumPathSum {
	int maxValue;

	public int maxPathSum(TreeNode root) {
		maxValue = Integer.MIN_VALUE;
		maxPathDown(root);
		return maxValue;
	}

	private int maxPathDown(TreeNode node) {
		if (node == null)
			return 0;
		int left = Math.max(0, maxPathDown(node.left));		//get left side max branch
		int right = Math.max(0, maxPathDown(node.right));	//get right side max branch
		maxValue = Math.max(maxValue, left + right + node.val);	//compare to max value and update
		return Math.max(left, right) + node.val;			//only return max to upper level.
	}
}

// dfs å…¨å±€å?˜é‡?æ?¥æŽ§åˆ¶æœ€å¤§å€¼ è¶…è¿‡æœ€å¤§å€¼å°±è®°å½• æ³¨æ„? å¦‚æžœå·¦å?³æž?çš„åŠ å’Œæ˜¯è´Ÿå€¼çš„è¯?å°±ç”¨èˆ?å¼ƒå¹¶å?–0