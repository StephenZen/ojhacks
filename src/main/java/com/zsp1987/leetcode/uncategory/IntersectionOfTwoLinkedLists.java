package com.zsp1987.leetcode.uncategory;

import com.zsp1987.leetcode.datatype.ListNode;

public class IntersectionOfTwoLinkedLists {
	public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
		int n = 0, m = 0;
		ListNode a = headA, b = headB;

		while (a != null) {
			a = a.next;
			n++;
		}
		while (b != null) {
			b = b.next;
			m++;
		}

		a = headA;
		b = headB;

		if (n > m) {
			int diff = n - m;
			for (int i = 0; i < diff; i++) {
				a = a.next;
			}
		} else {
			int diff = m - n;
			for (int i = 0; i < diff; i++) {
				b = b.next;
			}
		}

		while (a != null || b != null) {

			if (a.val != b.val) {
				a = a.next;
				b = b.next;
			} else {
				return a;
			}
		}
		return null;
	}
}

// å¦‚æžœæœ€å?Žä¸¤ä¸ªåˆ—è¡¨intersect, å?Žå?Šæ®µæ˜¯ä¸€æ ·çš„, æ‰€ä»¥intersectionçš„ç‚¹è‚¯å®šä¸?åœ¨å‰?é?¢çš„å·®å¼‚æ®µ
// è·³è¿‡ä¹‹å?Ž å½“ä¸¤ä¸ªç‚¹ä¸ºå?Œå€¼ä¹‹å?Ž, intersection å¼€å§‹