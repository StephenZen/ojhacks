package com.zsp1987.leetcode.uncategory;

/*
 Follow up for "Find Minimum in Rotated Sorted Array":
 What if duplicates are allowed?

 Would this affect the run-time complexity? How and why?

 Suppose a sorted array is rotated at some pivot unknown to you beforehand.

 (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

 Find the minimum element.

 The array may contain duplicates.
 */

public class FindMinimumInRotatedSortedArrayII {
	public int findMin(int[] nums) {

		if (nums.length == 0)
			return -1;
		int s = 0;
		int e = nums.length - 1;
		while (s < e) {
			int m = (s + e) / 2;
			if (nums[s] == nums[m]) {			// ä»Žstart é‡?å¤?åˆ° mid
				if (nums[m] > nums[e]) {
					s = m + 1;
				} else {						// å°¾éƒ¨ä¹Ÿéƒ½æ˜¯é‡?å¤?
					e--;
				}
			} else if (nums[s] < nums[m]) {
				if (nums[s] >= nums[e]) {		// ä»Žeæ‹?åˆ°séƒ½æ˜¯é€’å¢ž, æ‰€ä»¥æœ€å°?å€¼è‚¯å®šåœ¨å?³ä¾§
					s = m + 1;
				} else {
					return nums[s];				// åˆšå¥½è½¬æŠ˜
				}
			} else {							// startå¤§äºŽä¸­å€¼, ä½†ä¸?èƒ½ç¡®å®šæ˜¯ä¸?æ˜¯ä¸­å€¼å°±æ˜¯æœ€å°?å€¼çš„å¼€å§‹ æ‰€ä»¥start + 1; 
				s++;
				e = m;
			}
		}
		return nums[s];
	}
}

// é‡?ç‚¹è¿˜æ˜¯è·Ÿä¸­å€¼æ¯”è¾ƒ åˆ¤å®šæœ€å°?å€¼æ‰€åœ¨åŒºé—´
